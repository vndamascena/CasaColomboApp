// <auto-generated />
using System;
using CasaColomboApp.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasaColomboApp.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240426120545_updeposito")]
    partial class updeposito
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DataHoraAlteracao")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Deposito", b =>
                {
                    b.Property<int>("DepositoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositoId"));

                    b.Property<string>("NomeDeposito")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.HasKey("DepositoId");

                    b.HasIndex("NomeDeposito")
                        .IsUnique();

                    b.ToTable("DEPOSITO", (string)null);
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CNPJ");

                    b.Property<DateTime?>("DataHoraAlteracao")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("FORNECEDOR", (string)null);
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Ala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ALA");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<int>("NumeroLote")
                        .HasMaxLength(150)
                        .HasColumnType("int")
                        .HasColumnName("NUMERO LOTE");

                    b.Property<Guid?>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PRODUTOID");

                    b.Property<int>("QuantidadeLote")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("LOTE", (string)null);
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<Guid?>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CATEGORIAID");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime?>("DataHoraAlteracao")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORAALTERACAO");

                    b.Property<DateTime?>("DataHoraCadastro")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<int?>("DepositoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("DEPOSITOID");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<Guid?>("FornecedorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FORNECEDORID");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGEMURL");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("MetroQCaixa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MERTROQCAIXA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.Property<int?>("PecasCaixa")
                        .HasColumnType("int")
                        .HasColumnName("PECASCAIXA");

                    b.Property<string>("Pei")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PEI");

                    b.Property<decimal?>("PrecoCaixa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECOCAIXA");

                    b.Property<decimal?>("PrecoMetroQ")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECOMETRO");

                    b.Property<int?>("Quantidade")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DepositoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Lote", b =>
                {
                    b.HasOne("CasaColomboApp.Domain.Entities.Produto", "Produto")
                        .WithMany("Lote")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Produto", b =>
                {
                    b.HasOne("CasaColomboApp.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColomboApp.Domain.Entities.Deposito", "Deposito")
                        .WithMany("Produtos")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CasaColomboApp.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Deposito");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Deposito", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CasaColomboApp.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Lote");
                });
#pragma warning restore 612, 618
        }
    }
}
